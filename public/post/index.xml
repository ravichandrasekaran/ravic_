<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ravic_</title>
    <link>/post/</link>
    <description>Recent content in Posts on ravic_</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright (c) 2020 Ravi Chandrasekaran</copyright>
    <lastBuildDate>Tue, 21 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tidy: Potential fraud in Guess My Word </title>
      <link>/post/tidy-potential-fraud-in-guess-my-word/</link>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/tidy-potential-fraud-in-guess-my-word/</guid>
      <description>Motivation Like others, I’ve been surprised by my own addiction to Ryan Jones’s revival of “Guess My Word”.
 Data I grabbed a snapshot of the daily leaderboards from early 2020-01-21. For each participant, the number of guesses and the time to completion are recorded. In addition, entries are annotated with certain completion notes - first to respond, fewest guesses, fastest times, and “lucky”.
## Using an auto-discovered, cached token.</description>
    </item>
    
    <item>
      <title>Extra point vs. two-point conversion</title>
      <link>/post/extra-point-vs-two-point-conversion/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/extra-point-vs-two-point-conversion/</guid>
      <description>From the Riddler, a proposal for a new-and-improved post-touchdown extra-point system.
The defense Simple strategies One simple, uniformed strategy the defense could employ would be to simply defend against the 2-point conversion all the time. What would the offense’s expected score be?
\[ \begin{aligned} E[S_{CONV}] &amp;amp; = p_{XP} \cdot (1.0) + 2 \cdot (1 - p_{XP}) \cdot (0.4) \\ &amp;amp; = (0.2) \cdot p_{XP} + 0.8 \\ \end{aligned} \]</description>
    </item>
    
    <item>
      <title>Makeover: Sugar consumption</title>
      <link>/post/makeover-sugar-consumption/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/makeover-sugar-consumption/</guid>
      <description>Original visualization  Source Article: BBC Data source: British Nutrition Foundation Additional: NHS guidelines Original survey: National Diet and Nutrition Survey   Critique What works with this chart?
The headline is attention-grabbing. Triple the recommendation?!? How is that possible?  What doesn’t work with this chart?
Age breakdown gets a lot of attention (17 groups!). But the message I pull down is that free sugar consumption is well above target for all ages.</description>
    </item>
    
    <item>
      <title>Tidy: Spotify songs</title>
      <link>/post/tidy-spotify-songs/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/tidy-spotify-songs/</guid>
      <description>## ## Attaching package: &amp;#39;janitor&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## chisq.test, fisher.test ## ## Attaching package: &amp;#39;glue&amp;#39; ## The following object is masked from &amp;#39;package:dplyr&amp;#39;: ## ## collapse ## Parsed with column specification: ## cols( ## .default = col_double(), ## track_id = col_character(), ## track_name = col_character(), ## track_artist = col_character(), ## track_album_id = col_character(), ## track_album_name = col_character(), ## track_album_release_date = col_character(), ## playlist_name = col_character(), ## playlist_id = col_character(), ## playlist_genre = col_character(), ## playlist_subgenre = col_character() ## ) ## See spec(.</description>
    </item>
    
    <item>
      <title>Writing content with Markdown, LaTeX, and Shortcodes</title>
      <link>/post/writing-markdown-latex/</link>
      <pubDate>Wed, 20 Apr 2016 10:00:00 +0000</pubDate>
      
      <guid>/post/writing-markdown-latex/</guid>
      <description>Content can be written using Markdown, LaTeX math, and Hugo Shortcodes. Additionally, HTML may be used for advanced formatting.
Sub-headings ## H2 ### H3 #### H4 ##### H5 ###### H6  Emphasis Italics with *asterisks* or _underscores_. Bold with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough with ~~two tildes~~.  Ordered lists 1. First item 2. Another item  Unordered lists * First item * Another item  Images Images may be added to a page by placing them in your static/img/ folder and referencing them using one of the following two notations:</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>